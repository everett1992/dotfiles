#!/bin/env ruby

def hsv_to_rbg(h, s, v)
  unless (0...360).include?(h) and
         (0..1).include?(s)    and
         (0..1).include?(v)
    throw ArgumentError.new("H ∈ [0°, 360°], s ∈ [0, 1], and v ∈ [0, 1],")
  end


  c = v * s

  h_p = h.to_f / 60.0

  x = c * (1 - (h_p % 2 - 1).abs)

  rgb = if h == nil; [0,0,0]
        elsif (0...1).include? h_p; [c,x,0]
        elsif (1...2).include? h_p; [x,c,0]
        elsif (2...3).include? h_p; [0,c,x]
        elsif (3...4).include? h_p; [0,x,c]
        elsif (4...5).include? h_p; [x,0,c]
        elsif (5...6).include? h_p; [c,0,x]
        end

  m = v - c

  rgb = rgb.map { |i| (256 * (i + m)).to_i }

  return {r: rgb[0], g: rgb[1], b: rgb[2]}
end

def to_css(rgb)
  "rgb(#{rgb[:r]},#{rgb[:g]},#{rgb[:b]})"
end


File.open("colors.html", "w") do |f|
  f.write "<body>\n"
  (0...360).step(5).each do |h|
    css_color = to_css hsv_to_rbg(h, 0.6, 0.6)

    style = "background: #{css_color}; height: 5px;"
    f.write "<div style='#{style}'></div>\n"
  end
  f.write "</body>\n"
end
